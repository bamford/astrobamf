#!/bin/bash

# This script rotates the oldest daily backup
# to weekly backup.

BACKUP_VOLUME=$1
BACKUP_DEVICE="/dev/backup/${BACKUP_VOLUME}"
BACKUP_RW_MOUNT="/mnt/backup/${BACKUP_VOLUME}_rw"
BACKUP_RO_MOUNT="/mnt/backup/${BACKUP_VOLUME}"

### Attempt to unmount the RO mount point
#
if [ -d ${BACKUP_RO_MOUNT} ] ; then
umount ${BACKUP_RO_MOUNT}
fi

### Create the backup RW mount-point
#
if [ ! -d ${BACKUP_RW_MOUNT} ] ; then
mkdir ${BACKUP_RW_MOUNT}
fi

### Protect the backup RW mount-point
#
chmod go-rwx ${BACKUP_RW_MOUNT}

# Attempt to mount the RW mount point; else abort
#
mount -o rw ${BACKUP_DEVICE} ${BACKUP_RW_MOUNT}
if (( $? )); then
{
	$ECHO "Could not mount $BACKUP_DEVICE read-write";
	exit;
}
fi

### Remove weekly backup
#
if [ -d ${BACKUP_RW_MOUNT}/weekly.0 ] ; then
rm -rf ${BACKUP_RW_MOUNT}/weekly.0
fi

### Hard link oldest daily backup to weekly backup
#
if [ -d ${BACKUP_RW_MOUNT}/daily.3 ] ; then
cp -al ${BACKUP_RW_MOUNT}/daily.3 ${BACKUP_RW_MOUNT}/weekly.0
fi

### Attempt to unmount the RW mount point
#
umount ${BACKUP_RW_MOUNT}
rmdir ${BACKUP_RW_MOUNT}

### Attempt to mount the RO mount point
#
mount -o ro ${BACKUP_DEVICE} ${BACKUP_RO_MOUNT}
